/*
 * SongPanel.java
 *
 * Created on 24.5.2009, 14:13:25
 */

package org.marvec.pisnickar.panels;

import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.lobobrowser.html.UserAgentContext;
import org.lobobrowser.html.parser.DocumentBuilderImpl;
import org.lobobrowser.html.parser.InputSourceImpl;
import org.lobobrowser.html.test.SimpleUserAgentContext;
import org.marvec.pisnickar.html.GlobalHtmlListener;
import org.marvec.pisnickar.html.HtmlListener;
import org.marvec.pisnickar.html.LocalHtmlRendererContext;
import org.marvec.pisnickar.songs.Song;
import org.marvec.pisnickar.songs.SongSource;
import org.w3c.dom.Document;
import org.xml.sax.SAXException;

/**
 *
 * @author marvec
 */
public class SongPanel extends javax.swing.JPanel {
    private static final long serialVersionUID = -1137344751749815291L;

    private SongSource source;
    private String songId;
    private HtmlListener listener;
    private Song song;

    private UserAgentContext ucontext = null;
    private LocalHtmlRendererContext rcontext = null;
    private DocumentBuilderImpl dbi = null;


    /** Creates new form SongPanel */
    public SongPanel(HtmlListener listener, SongSource source, String songId, Song song) {
        this.listener = listener;
        this.source = source;
        this.songId = songId;
        this.song = song;

        initComponents();
        initHtmlPanel();
        initTransposeListener();
    }

    public void refresh(Song song) {
        this.song = song;
        initHtmlPanel();
    }

    private void setTranspose(Integer transpose) {
        song.setTranspose(transpose);
        refresh(song);
    }

    public void initTransposeListener() {
        final SongPanel panel = this;

        transposeSpinner.getModel().addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                panel.setTranspose((Integer) transposeSpinner.getModel().getValue());
            }
        });
    }

    protected Reader getResource() throws UnsupportedEncodingException {
        return new StringReader(song.toHtml(source.getId(), songId));
    }

    private void initHtmlPanel() {
        try {
            if (ucontext == null || rcontext == null || dbi == null) { // is it neccessary to reinitialize?
                ucontext = new SimpleUserAgentContext();
                rcontext = new LocalHtmlRendererContext(htmlPanel1, ucontext);
                rcontext.addHtmlListener(listener);
                rcontext.setSupressOriginalHanlder(true);
                dbi = new DocumentBuilderImpl(ucontext, rcontext);
            }
            Document document = dbi.parse(new InputSourceImpl(getResource(), GlobalHtmlListener.INTERNAL_URL_PREFIX));
            htmlPanel1.setDocument(document, rcontext);
        } catch (SAXException ex) {
            Logger.getLogger(SongPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SongPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      htmlPanel1 = new org.lobobrowser.html.gui.HtmlPanel();
      jPanel1 = new javax.swing.JPanel();
      jLabel1 = new javax.swing.JLabel();
      transposeSpinner = new javax.swing.JSpinner();

      setName("Form"); // NOI18N

      htmlPanel1.setName("htmlPanel1"); // NOI18N

      jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
      jPanel1.setName("jPanel1"); // NOI18N

      org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.marvec.pisnickar.PisnickarApp.class).getContext().getResourceMap(SongPanel.class);
      jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
      jLabel1.setName("jLabel1"); // NOI18N

      transposeSpinner.setModel(new javax.swing.SpinnerNumberModel(0, -12, 12, 1));
      transposeSpinner.setName("transposeSpinner"); // NOI18N

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(transposeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(240, Short.MAX_VALUE))
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel1)
            .addComponent(transposeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         .addComponent(htmlPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0)
            .addComponent(htmlPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
      );
   }// </editor-fold>//GEN-END:initComponents


   // Variables declaration - do not modify//GEN-BEGIN:variables
   private org.lobobrowser.html.gui.HtmlPanel htmlPanel1;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JSpinner transposeSpinner;
   // End of variables declaration//GEN-END:variables

}
